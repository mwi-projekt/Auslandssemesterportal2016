<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>dhbw.mwi</groupId>
	<artifactId>Auslandssemesterportal</artifactId>
	<version>0.0.1</version>

	<packaging>war</packaging>

	<name>Camunda BPM Process Application</name>
	<description>A Process Application for [Camunda BPM](http://docs.camunda.org). [The project has been generated by the Maven archetype 'camunda-archetype-servlet-war-7.4.0']</description>

	<properties>
		<camunda.version>7.11.0</camunda.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<failOnMissingWebXml>false</failOnMissingWebXml>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			
			<dependency>
				<groupId>org.camunda.bpm</groupId>
				<artifactId>camunda-bom</artifactId>
				<version>${camunda.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			
			<dependency>
				<groupId>org.camunda.bpm.dmn</groupId>
				<artifactId>camunda-engine-dmn-bom</artifactId>
				<version>${camunda.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>8.0.16</version>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>2.28.2</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<!-- process engine, needs to be provided -->
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-engine</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<!-- decision engine -->
			<groupId>org.camunda.bpm.dmn</groupId>
			<artifactId>camunda-engine-dmn</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<!-- AssertJ Testing Library -->
			<groupId>org.camunda.bpm.extension</groupId>
			<artifactId>camunda-bpm-assert</artifactId>
			<version>2.0-alpha2</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.16</version><!--$NO-MVN-MAN-VER$-->
		</dependency>

		<!-- Required to use Spin dataformat support in unit tests -->
		<dependency>
			<groupId>org.camunda.spin</groupId>
			<artifactId>camunda-spin-dataformat-all</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-engine-plugin-spin</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Required to use Connectors in unit tests -->
		<dependency>
			<groupId>org.camunda.connect</groupId>
			<artifactId>camunda-connect-connectors-all</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.camunda.bpm</groupId>
			<artifactId>camunda-engine-plugin-connect</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13-beta-3</version>
		</dependency>
		

		<dependency>
			<!-- Needed for InMemoryH2Test -->
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.199</version>
			<scope>test</scope>
		</dependency> 
		
		<dependency>
			<!-- Used to generate test coverage reports, see https://github.com/camunda/camunda-consulting/tree/master/snippets/process-test-coverage -->
			<groupId>org.camunda.consulting.snippets</groupId>
			<artifactId>process-test-coverage</artifactId>
			<version>0.2.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- use logback as logger -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.3.0-alpha4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<!-- apache commons logging => slf4j -->
			<artifactId>jcl-over-slf4j</artifactId>
			<version>2.0.0-alpha0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- java util logging => slf4j -->
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>2.0.0-alpha0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.maven</groupId>
			<artifactId>tomcat7-maven-plugin</artifactId>
			<version>2.2</version>
			<type>maven-plugin</type>
			<exclusions>
				<exclusion>
					<artifactId>tomcat-embed-core</artifactId>
					<groupId>org.apache.tomcat.embed</groupId>
				</exclusion>
				<exclusion>
					<artifactId>tomcat-el-api</artifactId>
					<groupId>org.apache.tomcat</groupId>
				</exclusion>
				<exclusion>
					<artifactId>tomcat-servlet-api</artifactId>
					<groupId>org.apache.tomcat</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Add your own dependencies here, if in compile scope, they are added 
			to the war -->
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.5.0-b01</version>
		</dependency>
		
		<dependency>
		    <groupId>javax.xml.bind</groupId>
		    <artifactId>jaxb-api</artifactId>
		    <version>2.4.0-b180830.0359</version>
		</dependency>
		<dependency>
		    <groupId>com.sun.xml.bind</groupId>
		    <artifactId>jaxb-impl</artifactId>
		    <version>2.4.0-b180830.0438</version>
		</dependency>

		<dependency>
		  <groupId>com.google.code.gson</groupId>
		  <artifactId>gson</artifactId>
		  <version>2.8.5</version>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>2.0.2</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>camunda-bpm-nexus</id>
			<name>Camunda BPM Maven Repository</name>
			<url>https://app.camunda.com/nexus/content/groups/public</url>
		</repository>
		<repository>
		    <id>central</id>
		    <url>http://repo.maven.apache.org/maven2/</url>
		</repository>
	</repositories>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<!-- Use the latest released version:
                https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
				<version>1.9.1</version>

				<!-- optional -->
				<configuration>
					<workingDirectory>src/main/webapp</workingDirectory>
					<installDirectory>target</installDirectory>
				</configuration>

				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<!-- See https://nodejs.org/en/download/ for latest node and npm (lts) versions -->
							<nodeVersion>v8.11.1</nodeVersion>
							<npmVersion>5.6.0</npmVersion>
						</configuration>
					</execution>

					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<!-- Optional configuration which provides for running any npm command -->
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>

					<execution>
						<id>npm run build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
			  <groupId>io.fabric8</groupId>
			  <artifactId>docker-maven-plugin</artifactId>
			  <version>0.32.0</version>
			
			  <configuration>
			     <images>
			        <!-- A single's image configuration -->
			        <image>
			        	<name>mwi/app</name>
			        	<build>
                     		<dockerFile>${project.basedir}/docker/mwi/Dockerfile</dockerFile>
                     		<assembly>
					            <mode>dir</mode>
					            <name>target/</name>
					            <inline xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
					              <id>middleware-rest</id>
					              <files>
					                <file>
					                  <source>${project.build.directory}/Auslandssemesterportal.war</source>
					                  <outputDirectory>./</outputDirectory>
					                  <destName>Auslandssemesterportal.war</destName>
					                </file>
					              </files>
					            </inline>
					          </assembly>
                         </build>
			        </image>
			     </images>
			  </configuration>
			</plugin>
			
			<plugin>
			  <groupId>org.apache.tomcat.maven</groupId>
			  <artifactId>tomcat7-maven-plugin</artifactId>
			  <version>2.0</version>
			  <configuration>
			    <url>http://localhost:8086/manager/text</url>
			   	<username>war-deployer</username>
	  			<password>maven-tomcat-plugin</password>
			    <path>/Auslandssemesterportal</path>
			    <update>true</update>
			  </configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>dev</id>
		</profile>
		<profile>
			<id>dockerBuild</id>
			<activation>
	            <activeByDefault>true</activeByDefault>
	        </activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<extensions>true</extensions>
						<executions>
							<execution>
								<id>build</id>
								<phase>install</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
